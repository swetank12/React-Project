{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","toggleMode","for","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","rows","onChange","event","console","log","target","backgroundColor","newText","toUpperCase","lowText","toLowerCase","split","length","Alert","alert","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","showAlert","message","setTimeout","aboutText","document","body","navText","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2af73e20.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n         <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        </ul>\r\n       {/*  <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n        </li> */}\r\n        {/* <li className=\"nav-item dropdown\">\r\n        </li> */}\r\n      {/*   <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">Contact Us</a>\r\n        </li> */}\r\n     {/*  </ul> */}\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n       <li className=\"nav-item\">\r\n        <div className={`form-check form-switch mx-3 text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n          <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">Enable the Dark Mode</label>\r\n        </div>\r\n        </li>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\n\r\n//Passing props\r\nNavbar.propTypes = {title: PropTypes.string,\r\naboutText: PropTypes.string,}\r\n\r\n//Default prop types\r\nNavbar.defaultProps ={\r\n    title: \" New title\"\r\n}","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    //converting the text to upper case\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n\r\n    //converting the text to lower case\r\n    const handleLowClick = () => {\r\n        let lowText = text.toLowerCase();\r\n        setText(lowText);\r\n    }\r\n\r\n    //To clear texts from textarea\r\n    const handleClearClick = () => {\r\n      let newText =\"\";\r\n      setText(newText);\r\n    }\r\n    //To copy texts from textarea\r\n    const handleCopyClick = () => {\r\n      let newText = {text};\r\n\r\n    }\r\n    \r\n    //writing texts in textarea\r\n    const handleOnChange = (event) => {\r\n        console.log(\"You are writting\");\r\n        setText(event.target.value);\r\n\r\n    }\r\n    const [text,setText] = useState('Enter text here...');\r\n  //To change text \r\n  // setText(\"New text\");\r\n    return (\r\n    <>\r\n    <div className=\"container\" >\r\n<h1 style={{color: props.mode==='dark'?'white':'#06283D'}}>{props.heading}<hr></hr></h1>\r\n<div className=\"mb-3\">\r\n  {/* <label htmlFor=\"myBox\" className=\"form-label\" id=\"formBox\"></label> */}\r\n  <textarea value={text} className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"8\" onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white',color: props.mode==='dark'?'white':'#06283D'}}></textarea>\r\n</div>\r\n<button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to Uppercase</button> &nbsp;\r\n<button className=\"btn btn-success\" onClick={handleLowClick}>Convert to Lowercase</button> &nbsp;\r\n<button className=\"btn btn-warning\" onClick={handleClearClick}>Clear text</button> &nbsp;\r\n<button className=\"btn btn-danger\" onClick={handleCopyClick}>Copy text</button>\r\n    </div>\r\n    <hr />\r\n    <div className=\"container my-2\">\r\n        <h1 style={{color: props.mode==='dark'?'white':'#06283D'}}>Your text summary</h1>\r\n        <p style={{color: props.mode==='dark'?'white':'#06283D'}}>{text.split(\" \").length}words and {text.length} chracaters</p>\r\n        <p style={{color: props.mode==='dark'?'white':'#06283D'}}>{0.08 * text.split(\" \").length}Minutes Read</p>\r\n        <hr></hr>\r\n        <h3 style={{color: props.mode==='dark'?'white':'#06283D'}}>Preview</h3>\r\n        <hr></hr>\r\n        <p style={{color: props.mode==='dark'?'white':'#06283D'}}>{text}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    \r\n       props.alert && <div className={`alert alert-${props.alert.type} container  my-3 alert-dismissible fade show`} role=\"alert\">\r\n       <strong> {props.alert.type}</strong> : {props.alert.msg}\r\n       {/*  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>\r\n\r\n  )\r\n}\r\n ","/* import logo from './logo.svg'; */\n/* import {\n  BrowserRouter as Router, \n  Route,\n  Switch\n} from \"react-router-dom\";\n */\n\n/* import './App.css'; import About from './components/About';  */\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm'; \nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light'); \n  const [alert, setAlert] = useState(null);\n  \n  const showAlert = (message,type) => {\n      setAlert({\n        msg : message,\n        type: type\n      })\n      setTimeout(()=>{\n        setAlert(null);\n      }, 3000);\n  }\n  const toggleMode =()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor = \"#06283D\";\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      document.title = \"My-App (Dark Mode)\";\n    }\n    else{\n      setMode('light'); \n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\",\"success\");\n      document.title = \"My-App (Light Mode)\";\n       \n    }\n  }\n  \n   return (\n  <>\n  {/* <Router> */}\n<Navbar title=\"My-App\" aboutText=\"About Us\"  mode={mode} toggleMode={toggleMode} navText=\"Enable Dark Mode\"/>\n<Alert alert={alert}/>\n<div className=\"container\">\n  {/* <Switch aria-checked=\"true\">\n    <Route exact path=\"/About\"><About/></Route>\n    <Route exact path=\"/\"> */}\n    <TextForm  heading=\"Enter the text to analyze below\" mode={mode}/> \n {/*    </Route>\n  </Switch>\n</div>\n</Router> */}\n</div>\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}